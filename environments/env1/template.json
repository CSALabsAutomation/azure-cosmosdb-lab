{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
        "description": "Location for your CosmosDB account"
        }
    },
    "cosmosDBAccountName": {
        "type": "string",
        "defaultValue": "cosmosDbAccount",
        "metadata": {
        "description": "The name of your CosmosDB account"
        }
    },
    "tier": {
        "type": "string",
        "defaultValue": "Standard",
        "metadata": {
        "description": "CosmosDB account tier"
        }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "cosmosLabUser",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "secureString",
      "defaultValue": "de22c4!DE22C4@de22c4",
      "minLength": 12,
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "defaultValue": "[toLower(format('{0}-{1}', parameters('vmName'), uniqueString(resourceGroup().id, parameters('vmName'))))]",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "publicIpName": {
      "type": "string",
      "defaultValue": "DevVmPublicIp",
      "metadata": {
        "description": "Name for the Public IP used to access the Virtual Machine."
      }
    },
    "publicIPAllocationMethod": {
      "type": "string",
      "defaultValue": "Dynamic",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "Allocation method for the Public IP used to access the Virtual Machine."
      }
    },
    "publicIpSku": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard"
      ],
      "metadata": {
        "description": "SKU for the Public IP used to access the Virtual Machine."
      }
    },
    "osType": {
      "type": "string",
      "allowedValues": [
        "Windows",
        "Linux"
      ],
      "defaultValue": "Windows",
      "metadata": {
        "description": "Type of OS on the existing vhd"
      }
    },
    "OSVersion": {
      "type": "string",
      "defaultValue": "2022-datacenter-azure-edition",
      "allowedValues": [
        "2022-datacenter",
        "2022-datacenter-azure-edition",
        "2022-datacenter-azure-edition-core",
        "2022-datacenter-azure-edition-core-smalldisk",
        "2022-datacenter-azure-edition-smalldisk",
        "2022-datacenter-core",
        "2022-datacenter-core-g2",
        "2022-datacenter-core-smalldisk",
        "2022-datacenter-core-smalldisk-g2",
        "2022-datacenter-g2",
        "2022-datacenter-smalldisk",
        "2022-datacenter-smalldisk-g2"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v5",
      "metadata": {
        "description": "Size of the virtual machine."
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "DevVM",
      "metadata": {
        "description": "Name of the virtual machine."
      }
    }
  },
  "variables": {
    "cosmosDBAccountName": "[take(concat('cosmosdb', uniqueString(resourceGroup().id)), 15)]",
    "vmName": "[take(concat('DevVm', uniqueString(resourceGroup().id)), 15)]",
    "osDiskVhdUri": "https://csalabsshrdstrg1.blob.core.windows.net/cloudacademy/azure-cosmosdb/devvmosdiskv1_7.vhd",
    "imageName": "[take(concat('DevVmDataImage', uniqueString(resourceGroup().id)), 15)]",
    "storageAccountName": "[format('bootdiags{0}', uniqueString(resourceGroup().id))]",
    "publicIpName": "DevVmPublicIp",
    "nicName": "DevVmNic",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "virtualNetworkName": "DevVmVnet",
    "networkSecurityGroupName": "DevVmNsg",
    "dotNetSDKInstallScriptFileUrl": "https://raw.githubusercontent.com/CSALabsAutomation/quickstart-templates/main/azure-cosmosdb/scripts/dotnet-install.ps1",
    "vsCodeInstallScriptFileUrl": "https://raw.githubusercontent.com/CSALabsAutomation/quickstart-templates/main/azure-cosmosdb/scripts/vscode-install.ps1",
    "pbiDesktopInstallScriptFileUrl": "https://raw.githubusercontent.com/CSALabsAutomation/quickstart-templates/main/azure-cosmosdb/scripts/pbi-desktop-install.ps1"
  },
  "resources": [
    {
        "name": "[variables('cosmosDBAccountName')]",
        "type": "Microsoft.DocumentDB/databaseAccounts",
        "apiVersion": "2020-04-01",
        "location": "[parameters('location')]",
        "properties": {
          "locations": [
            {
              "locationName": "[parameters('location')]"
            }
          ],
          "databaseAccountOfferType": "[parameters('tier')]"
        }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage"
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2021-02-01",
      "name": "[variables('publicIpName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('publicIpSku')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAllocationMethod')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-02-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-3389",
            "properties": {
              "priority": 1000,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "3389",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-02-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-02-01",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ]
    },    
    {
      "type": "Microsoft.Compute/images",
      "apiVersion": "2020-06-01",
      "name": "[variables('imageName')]",
      "location": "[parameters('location')]",
      "properties": {
        "hyperVGeneration": "V2",
        "storageProfile": {
          "osDisk": {
            "osType": "[parameters('osType')]",
            "osState": "Generalized",
            "blobUri": "[variables('osDiskVhdUri')]",
            "caching": "ReadWrite",
            "storageAccountType": "Standard_LRS"
          }  
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-03-01",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": false,
            "patchSettings": {
                "patchMode": "Manual"
            }
           }
        },
        "storageProfile": {
          "imageReference": {
            "id": "[resourceId('Microsoft.Compute/images', variables('imageName'))]"
          }        
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/images', variables('imageName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    }    
  ],
  "outputs": {
    "hostname": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))).dnsSettings.fqdn]"
    }
  }
}